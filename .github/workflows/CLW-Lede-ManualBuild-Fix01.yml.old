#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
# 原程式碼(二列)：用在 R7800 可編譯完成，但 x86_64 會編譯失敗，需增加eSir修正部份
#=================================================

name: CLW-Lede-ManualBuild-Fix01

on:
  release:
    types: [published]
  push:
    branches:
      - master
    paths:
      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_SH: diy.sh
  FREE_UP_DISK: false
  SSH_ACTIONS: true
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Taipei

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      #uses: actions/checkout@master
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        #原程式碼(二列)：用在 R7800 可編譯完成，但 x86_64 會編譯失敗，需增加eSir修正部份
        #docker rmi `docker images -q`
        #echo "Deleting files, please wait ..."
        #sudo rm -rf \
        #  /usr/share/dotnet \
        #  /etc/mysql \
        #  /etc/php
        #sudo -E apt-get -y purge \
        #  azure-cli \
        #  ghc* \
        #  zulu* \
        #  hhvm \
        #  llvm* \
        #  firefox \
        #  google* \
        #  dotnet* \
        #  powershell \
        #  openjdk* \
        #  mysql* \
        #  php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget swig iptables coreutils bash curl ca-certificates ipset ccache iptables-mod-extra libcap libcap-bin ruby ruby-yaml ip6tables-mod-nat
        #sudo -E apt-get -y autoremove --purge
        #sudo -E apt-get clean

    - name: Free up disk space
      if: env.FREE_UP_DISK == 'true'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /usr/share/dotnet
        docker rmi `docker images -q`
        sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
               
    - name: Clone lede code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        #加入SSR Plus
        sed -i '11s/#//' feeds.conf.default
        #sed -i '11a src-git lienol https://github.com/Lienol/openwrt-package' feeds.conf.default
        sed -i '11a src-git lienol https://github.com/xiaorouji/openwrt-passwall' feeds.conf.default
                
    - name: Clone openclash code
      run: |
        git clone https://github.com/chancat87/OpenClash.git
        mv OpenClash/luci-app-openclash/ openwrt/package/
        
    - name: Clone clash code
      run: |
        cd openwrt/package
        git clone https://github.com/frainzy1477/luci-app-clash.git
        
    - name: Clone Hello World code
      run: |
        cd openwrt/package/lean
        #git lua-maxminddb 依赖
        git clone https://github.com/jerrykuku/lua-maxminddb.git  
        git clone https://github.com/jerrykuku/luci-app-vssr.git 
        
    - name: Clone adGuardhome code
      run: |
        cd openwrt/package
        git clone https://github.com/rufengsuixing/luci-app-adguardhome.git
        
    - name: Clone dockerman code
      run: |
         git clone https://github.com/lisaac/luci-lib-docker.git
         mv luci-lib-docker/collections/luci-lib-docker openwrt/package/
         git clone https://github.com/lisaac/luci-app-dockerman.git
         mv luci-app-dockerman/applications/luci-app-dockerman openwrt/package/
    
    - name: Fix dockerman code
      run: |
        cd openwrt/package/luci-app-dockerman
        sed -i '17d' Makefile
        sed -i '16a include $(TOPDIR)/feeds/luci/luci.mk' Makefile
        
    - name: Update feeds for smartdns
      run: |
        cd openwrt
        ./scripts/feeds update -a
        
    - name: Clone smartdns code
      run: |
        cd openwrt
        WORKINGDIR="`pwd`/feeds/packages/net/smartdns"
        mkdir $WORKINGDIR -p
        rm $WORKINGDIR/* -fr
        wget https://github.com/pymumu/openwrt-smartdns/archive/master.zip -O $WORKINGDIR/master.zip
        unzip $WORKINGDIR/master.zip -d $WORKINGDIR
        mv $WORKINGDIR/openwrt-smartdns-master/* $WORKINGDIR/
        rmdir $WORKINGDIR/openwrt-smartdns-master
        rm $WORKINGDIR/master.zip
        
        LUCIBRANCH="lede"
        WORKINGDIR="`pwd`/feeds/luci/applications/luci-app-smartdns"
        mkdir $WORKINGDIR -p
        rm $WORKINGDIR/* -fr
        wget https://github.com/pymumu/luci-app-smartdns/archive/${LUCIBRANCH}.zip -O $WORKINGDIR/${LUCIBRANCH}.zip
        unzip $WORKINGDIR/${LUCIBRANCH}.zip -d $WORKINGDIR
        mv $WORKINGDIR/luci-app-smartdns-${LUCIBRANCH}/* $WORKINGDIR/
        rmdir $WORKINGDIR/luci-app-smartdns-${LUCIBRANCH}
        rm $WORKINGDIR/${LUCIBRANCH}.zip
  
    - name: Fix smartdns code
      run: |
        cd openwrt/feeds/luci/applications/luci-app-smartdns
        sed -i '24d' Makefile
        sed -i '23a include $(TOPDIR)/feeds/luci/luci.mk' Makefile
        
    - name: Fix compat code
      run: |
        cd openwrt/feeds/luci/modules/luci-compat
        sed -i '17d' Makefile
        sed -i '16a include $(TOPDIR)/feeds/luci/luci.mk' Makefile
    
    - name: Update & Install feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        #./scripts/feeds install -a
    
    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
         
    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Download package
      id: package
      run: |
        cd openwrt
        #make download -j8
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"
        
    - name: Upload bin directory
      #uses: actions/upload-artifact@master
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_directory
        path: openwrt/bin
        
    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$(pwd)"
        echo "::set-output name=status::success"
        
    - name: Upload firmware directory
      #uses: actions/upload-artifact@master
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}
